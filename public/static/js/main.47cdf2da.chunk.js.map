{"version":3,"sources":["components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","SpaceX.jpg","App.js","reportWebVitals.js","index.js"],"names":["LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","className","classNames","format","to","MissionKey","LAUNCHES_QUERY","gql","launches","query","loading","error","data","console","map","LAUNCH_QUERY","Launch","useParams","log","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","src","logo","alt","style","width","display","margin","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47cdf2da.chunk.js","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\nimport Moment from 'react-moment';\r\nimport { Link, Outlet } from 'react-router-dom';\r\n\r\nexport default function LaunchItem({launch:{flight_number,mission_name,launch_date_local,launch_success} }) {\r\n\r\n    return (\r\n        <div className=\"card card-body mb-3\">\r\n           <div className=\"row\">\r\n               <div className=\"col-md-9\">\r\n                <h4>Mission: <span className={classNames({\r\n                    'text-success':launch_success,\r\n                    'text-danger':!launch_success\r\n                })}>{mission_name}</span></h4>\r\n                <p>Date: <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment></p>\r\n               </div>\r\n               <div className=\"col-md-3\">\r\n                <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">Launch Details</Link>\r\n                <Outlet />\r\n               </div>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function MissionKey() {\r\n    return (\r\n        <div className=\"my-3\">\r\n            <p>\r\n                <span className=\"px-3 mr-2 bg-success\" /> = Success\r\n            </p>\r\n            <p>\r\n                <span className=\"px-3 mr-2 bg-danger\" /> = Failure\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport LaunchItem from './LaunchItem';\r\nimport MissionKey from './MissionKey';\r\n\r\nconst LAUNCHES_QUERY = gql`\r\n    query LaunchesQuery{\r\n        launches {\r\n            flight_number\r\n            mission_name\r\n            launch_date_local\r\n            launch_success\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function launches() {\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"display-4 my-3\">Launches</h1>\r\n            <MissionKey />\r\n            <Query query={LAUNCHES_QUERY}>\r\n                {\r\n                    ({loading,error,data}) => {\r\n                        if(loading) return <h4>Loading ...</h4>\r\n                        if(error) console.error(error)\r\n                        \r\n                        return <Fragment>\r\n                            {\r\n                                data.launches.map(launch => (\r\n                                    <LaunchItem key={launch.flight_number+launch.mission_name} launch={launch} />\r\n                                ))\r\n                            }\r\n                        </Fragment>\r\n                    }\r\n                }\r\n            </Query>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport gql from 'graphql-tag';\r\nimport {Query} from 'react-apollo';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n\r\nconst LAUNCH_QUERY = gql`\r\n    query LaunchQuery($flight_number: Int!){\r\n        launch(flight_number: $flight_number) {\r\n            flight_number\r\n            mission_name\r\n            launch_year\r\n            launch_success\r\n            launch_date_local\r\n            rocket {\r\n                rocket_id\r\n                rocket_name\r\n                rocket_type\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function Launch() {\r\n    let {flight_number} = useParams();\r\n    console.log(flight_number)\r\n    flight_number = parseInt(flight_number);\r\n    return (\r\n        <Fragment>\r\n            <Query query={LAUNCH_QUERY} variables= {{flight_number}}>\r\n                {\r\n                    ({loading, error, data}) => {\r\n                        if(loading)return <h4>Loading ...</h4>\r\n                        if(error) console.error(error)\r\n\r\n                        const {mission_name,flight_number,launch_year,launch_success, rocket:{\r\n                            rocket_id, rocket_name, rocket_type\r\n                        }} = data.launch;\r\n                        return <div>\r\n                            <h1 className=\"display-4 my-3\"><span className=\"text-dark\">Mission:</span>{mission_name}</h1>\r\n                            <h4 className=\"mb-3\">Launch Details</h4>\r\n                            <ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">Flight Number: {flight_number}</li>\r\n                                <li className=\"list-group-item\">Launch Year: {launch_year}</li>\r\n                                <li className=\"list-group-item\">\r\n                                    Launch Success: <span className={launch_success?'text-success':'text-danger'}>{launch_success?\"Yup\":\"Nope :(\"}</span>\r\n                                </li>\r\n                            </ul>\r\n\r\n                            <h4 className=\"my-3\">Rocket Details</h4>\r\n                            <ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\r\n                                <li className=\"list-group-item\">Rocket Name: {rocket_name}</li>\r\n                                <li className=\"list-group-item\">Rocket Type: {rocket_type}</li>\r\n                            </ul>\r\n                            <hr />\r\n                            <Link to=\"/\" className=\"btn btn-secondary\">Back</Link>\r\n                        </div>\r\n                    }\r\n                }\r\n            </Query>\r\n        </Fragment>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/SpaceX.a382e9c8.jpg\";","import React from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { BrowserRouter as Router, Route, Routes} from 'react-router-dom';\nimport { ApolloProvider } from 'react-apollo';\nimport './App.css';\nimport Launches from './components/Launches';\nimport Launch from './components/Launch'\nimport logo from './SpaceX.jpg';\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n})\nfunction App() {\n  return (\n    <ApolloProvider client = {client}>\n    <Router>\n    <div className=\"container\">\n      <img src={logo} alt=\"SpaceX\" style={{width: 300, display: 'block', margin:'auto'}} />\n      <Routes>\n        <Route exact path=\"/\" element= {<Launches />} />\n        <Route exact path=\"/launch/:flight_number\" element= {<Launch />} />\n        </Routes> \n    </div>\n    </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}